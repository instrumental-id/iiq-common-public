buildscript {
    repositories { obj ->
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "org.ajoberstar.grgit:grgit-gradle:4.0.1"
        classpath 'org.aspectj:aspectjrt:1.8.9'
        classpath "org.asciidoctor:asciidoctor-gradle-jvm:3.3.2"
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-pdf:3.3.2"
        classpath("gradle.plugin.org.jdrupes.mdoclet:gradle-plugin:1.0.10")
    }
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: "org.jdrupes.mdoclet"

def getVersion() {
    def branch = System.getenv('GIT_BRANCH')

    def date = new Date().format('yyyyMMddHHmmss')

    if (branch == null || branch != "main") {
        return date + "-SNAPSHOT"
    } else {
        return date
    }
}

/* This is where the compiler finds its inputs */
sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['src']
        }
    }
}

def libRoot = project.getProperties().getOrDefault("idw.minimal.libpath", "lib")

/* Where to get dependency libraries */
repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url "https://plugins.gradle.org/m2/"
    }

    flatDir {
        dirs "${libRoot}/sailpoint"
    }
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "https://git.identityworksllc.com/api/v4/projects/157/packages/maven"

            credentials(HttpHeaderCredentials) {
                name = 'Job-Token'
                value = System.getenv("CI_JOB_TOKEN")
            }
            
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

group 'com.identityworksllc.iiq.common.minimal'
version getVersion()

tasks.withType(JavaCompile) {
    options.warnings = false
    options.compilerArgs += '-Xlint:-deprecation'
    options.compilerArgs += '-Xlint:-unchecked'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Javadoc) {
    onlyIf {
        (JavaVersion.current() == JavaVersion.VERSION_1_8)
    }

    options.addStringOption('Xdoclint:none', '-quiet')
    options.setMemberLevel(JavadocMemberLevel.PUBLIC)
    options.links('https://docs.oracle.com/javase/8/docs/api/')
}

def includeLib = fileTree(dir: "${libRoot}/included")
includeLib.include "*.jar"

dependencies {
    api ":identityiq:"
    api ":connector-bundle-identityiq:"

    api includeLib
    api group: 'org.glassfish.jersey.bundles', name: 'jaxrs-ri', version: '2.22.2'
    api group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    api group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    api group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    api group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    api group: 'javax.faces', name: 'javax.faces-api', version: '2.3'
    api group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    api group: 'commons-lang', name: 'commons-lang', version: '2.6'
    api group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
    api group: 'log4j', name: 'log4j', version: '1.2.17'
    api group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    api group: 'bsf', name: 'bsf', version: '2.4.0'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    api group: 'org.springframework', name: 'spring-core', version: '5.2.15.RELEASE'
    api group: 'com.google.guava', name: 'guava', version: '11.0.1'
    api group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
}
